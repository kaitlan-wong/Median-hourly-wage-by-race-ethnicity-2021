---
title: "08 - Median Hourly Wage - IPUMS USA 2021 ACS 1-Year"
author: "Kaitlan Wong"
format: html
editor: visual
---

This analysis uses ACS 1-Year data from IPUMS USA. ***The data downloaded from IPUMS is already filtered for Texas respondents aged 25-64 years.***

See code book here: <https://live.usa.datadownload.ipums.org/web/extracts/usa/2073243/usa_00034.cbk>

**Variable definitions:**

-   WKSWORK1: the number of weeks that the respondent worked for profit, pay, or as an unpaid family worker during the previous year.

-   UHRSWORK: the number of hours per week that the respondent usually worked, if the person worked during the previous year.

-   INCWAGE: reports each respondent's total pre-tax wage and salary income - that is, money received as an employee - for the previous year.

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(ipumsr)
library(tidyverse) 
library(readxl) 
library(writexl) 
library(dplyr)
library(psych)
```

```{r}
#Read in ACS data from IPUMS

ddi <- read_ipums_ddi("usa_00034.xml")
acs_data <- read_ipums_micro(ddi)

#Convert variable names to lower case
names(acs_data) <- tolower(names(acs_data))


# Examine data
# View(acs_data)
# is.data.frame(acs_data)
# describe(acs_data)
```

```{r}
#Determine how many NAs there are 
sum(is.na(acs_data))
#Percent missing values per variable
apply(acs_data, 2, function(col)sum(is.na(col))/length(col))

#Remove missing cases 
na.omit(acs_data)
```

Filter data and recode variables.

```{r}

# Create inflation factor variable (will use later on)
# CPI Calculator $1 in 2019 = $1.05 in 2021
  inflation_factor <- 1.05

# Filter for Dallas PUMAs
data_21 <- acs_data %>% 
  filter(puma %in% c(02304, 02305, 02306, 02307, 02309, 02310, 02311, 02312, 02313, 02314, 02315, 02316, 02319, 01901, 02001),
         # Remove rows with N/A or missing values
         incwage != 999999 & incwage != 999998,
         wkswork1 != 00,
         uhrswork != 00,
         ) %>% 
# Condense Race and Ethnicity categories to create a new race/ethnicity variable
  mutate(race_eth=case_when(hispan %in% c(1:4) ~ "Hispanic",
                             hispan == 0 & race == 1 ~ "White, non-Hispanic", 
                             hispan == 0 & race == 2 ~ "Black, non-Hispanic",
                             hispan == 0 & race == 3 ~ "AIAN, non-Hispanic",
                             hispan == 0 & race %in% c(4:6) ~ "Asian or Pacific Islander, non-Hispanic",
                             hispan == 0 & race %in% c(7:9) ~ "Other, non-Hispanic",
                             TRUE ~ NA_character_)) %>%
  # calculate hours worked per year
  mutate(
    annual_hours = wkswork1 * uhrswork # weeks worked annually * usual hours worked per week
      ) %>%
  # calculate hourly wage
  mutate(
    hourly_wage = (incwage * inflation_factor) / annual_hours
  ) %>%
  na.omit() # Remove rows with missing values
```

Create table of counts and %s using person weight variable.

```{r}
library(matrixStats)

# more info on weightedMedian: https://www.rdocumentation.org/packages/spatstat/versions/1.56-1/topics/weighted.median

# Calculate median hourly wage by race/ethnicity

summary21 <- data_21 %>%
  group_by(race_eth) %>%
  summarize(
    median_wage = weightedMedian(hourly_wage, perwt)
  )

summary21

```

```{r}
# Calculate the weighted median for all people
summary_all21 <- data_21 %>%
  summarize(
    median_wage = weightedMedian(hourly_wage, perwt)
  )

summary_all21
```

Export tables to Excel.

```{r}
# Export tables to Excel

write_xlsx(summary21, "08_Median Hourly Wage_IPUMS_2021_KW.xlsx")
```

My numbers are a little different than Sarahs, so below I reran the numbers using svyby like Sarah's analysis.

```{r}

library(survey)

#PERSON WEIGHTS DESIGN
des_p <- svydesign(id=~cluster, strata=~interaction(strata,year), weights=~perwt, data=data_21, nest=TRUE) 

#TABLE BY RACE/ETH & YEAR
summary21_SS_method <- svyby(formula = ~hourly_wage, by = ~year+race_eth, des_p, svyquantile, quantiles=c(0.5), na.rm=TRUE)

summary21_all_SS_method <- svyby(formula = ~hourly_wage, by = ~year, des_p, svyquantile, quantiles=c(0.5), na.rm=TRUE)


# view data
summary21_SS_method

summary21_all_SS_method
```

Numbers using svyby are still different than Sarah's.
